name: Docker Build/Publish Image 
on:  
  push:    
    branches:
      - main
    tags:
      - '*'
jobs:
  # docker:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2

  #   - name: Set up QEMU
  #     uses: docker/setup-qemu-action@v1

  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v1

  #   - name: Login to DockerHub
  #     uses: docker/login-action@v1
  #     with:
  #       registry: ghcr.io
  #       username: ${{ secrets.DOCKER_USERNAME }}
  #       password: ${{ secrets.DOCKER_PASSWORD }}

  #   - name: Cache Docker layers
  #     uses: actions/cache@v2
  #     with:
  #       path: /tmp/.buildx-cache
  #       key: ${{ runner.os }}-buildx-${{ github.sha }}
  #       restore-keys: |
  #         ${{ runner.os }}-buildx-

  #           - name: Build and push
  #   - name: Build an image
  #     uses: docker/build-push-action@v2
  #     with:
  #       platforms: linux/arm
  #       context: .
  #       push: true
  #       tags: ghcr.io/vryazanov/russian-stock-bot:${{ github.sha }}
  #       cache-from: type=local,src=/tmp/.buildx-cache
  #       cache-to: type=local,dest=/tmp/.buildx-cache-new

  #   - name: Move cache
  #     run: |
  #       rm -rf /tmp/.buildx-cache
  #       mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  deployment:
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Prepare k8s creds
      run: "${{ secrets.KUBE_CONFIG }}" >> "./kubeconfig"
    - name: Run custom scripts
      uses: addnab/docker-run-action@v3
      with:
        image: chatwork/argocd-helmfile:2.0.3-0.139.8
        options: -v ${{ github.workspace }}:/app -v ./kubeconfig:/home/argocd/.kube/config
        run: ls -l .

  # deployment:
  #   needs: docker
  #   runs-on: 'ubuntu-latest'
  #   steps:
  #   - name: Set staging env
  #     if: startsWith(github.ref, 'refs/heads/')
  #     run: |
  #       echo "KUBE_NAMESPACE=staging" >> $GITHUB_ENV
  #   - name: Set production env
  #     if: startsWith(github.ref, 'refs/tags/')
  #     run: |
  #       echo "KUBE_NAMESPACE=production" >> $GITHUB_ENV
  #   - name: Checkout
  #     uses: actions/checkout@v2
  #   - name: Deploy
  #     uses: 'deliverybot/helm@v1'
  #     with:
  #       release: 'bot'
  #       namespace: '${{ env.KUBE_NAMESPACE }}-bot'
  #       helm: helm3
  #       chart: '.ci/helm/chart'
  #       token: '${{ github.token }}'
  #       values: |
  #         image_tag: ${{ github.sha }}
  #       value-files: >- 
  #         [
  #           ".ci/helm/${{ env.KUBE_NAMESPACE }}.values.yaml"
  #         ]
  #     env:
  #       KUBECONFIG_FILE: '${{ secrets.KUBE_CONFIG }}'